import os
import requests
import json

# Check if the OPEN_API_KEY environment variable is set
if not os.getenv('OPEN_API_KEY', ''):
    print('OPEN API Key not set. No response would be generated by the BOT')

def generate_math_problem():
    """
    Generates a basic math problem using the OpenAI API, including the correct answer and an explanation.
    Returns:
        str: The response from the OpenAI API in a structured format.
    """
    try:
        result = ''

        # Define the prompt for the OpenAI API
        prompt = (
            "Generate a basic math problem, provide the correct answer, "
            "and include a brief explanation of the steps taken to solve it. "
            "The response should be presented in a structured format that can be easily parsed, "
            "with clearly labeled keys for the 'question,' 'answer,' and 'explanation.'"
        )

        url = "https://api.openai.com/v1/chat/completions"

        headers = {
            'Authorization': f'Bearer {os.getenv('OPEN_API_KEY', '')}',
            'Content-Type': 'application/json'
        }

        payload = {
            "model": "gpt-4o-mini",
            "n": 1,
            "logprobs": False,
            "messages": [
                {"role": "system", "content": prompt}
            ]
        }
        response = requests.post(url, headers=headers, data=json.dumps(payload))
        response.raise_for_status()

        data = response.json()

        # Get the choices from the response and extract the content
        choices = data.get('choices', [])
        if choices:
            result = choices[0].get('message', {}).get('content', '')

    except Exception as e:
        raise

    return result

def parse_llm_response(text):
    """
    Parses the LLM (language model) response text from JSON format to a Python dictionary.
    Args:
        text (str): The JSON-formatted string response from the LLM.
    Returns:
        dict: The parsed JSON data as a dictionary.
    """
    json_data = json.loads(text)
    return json_data

def generate_llm_response():
    """
    Generates a math problem response using the OpenAI API and parses it.
    Returns:
        dict: The parsed response from the LLM, in dictionary format.
    """
    text = generate_math_problem()
    llm_response = parse_llm_response(text) # Generate the math problem and related content 
    return llm_response # Parse the generated response